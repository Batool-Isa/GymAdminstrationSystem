/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import Logic.*;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 * Name: MembersOptions class
 * @author Batool Isa, Fatima Mahfoodh, Fedaa Abdualwahab, Fatema Omran
 * @version 1.0
 * @created 15-May-2023 11:18:20 AM 
 * Purpose:this class represents options for
 * the members menu in a GUI application. They have options to add new member,
 * view member information, update member information, delete member, assign
 * member to personal trainer, and remover member from personal trainer
 */
public class MembersOptions extends javax.swing.JFrame {

    MainMenu mainMenu;

    /**
     * Name: MembersOptions 
     * Purpose:This constructor creates a new instance of
     * the MembersOptions class and sets its graphical components. 
     * setLocation()method is used to position MembersOptions window in the center of the screen for visibility and accessibility to the user
     * @param mainMenu the MainMenu instance that serves as the parent window
     * for this MembersOptions instance
     */
    public MembersOptions(MainMenu mainMenu) {
        this.mainMenu = mainMenu;
        initComponents();
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
    }

     /**
     * Name:MembersOptions 
     * Purpose:it is automatically called if no constructor
     * is explicitly defined, it is a default constructor
     */
    public MembersOptions() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBackground = new javax.swing.JPanel();
        btnAddMember = new javax.swing.JButton();
        btnViewMember = new javax.swing.JButton();
        btnUpdateMember = new javax.swing.JButton();
        btnDeleteMember = new javax.swing.JButton();
        btnAssignPT = new javax.swing.JButton();
        btnRemovePT = new javax.swing.JButton();
        lblBPLogo = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        lblTitle2 = new javax.swing.JLabel();
        lblDumbbellImg = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBackground.setBackground(new java.awt.Color(57, 72, 103));
        pnlBackground.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAddMember.setBackground(new java.awt.Color(241, 246, 249));
        btnAddMember.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnAddMember.setText("Add New Member");
        btnAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMemberActionPerformed(evt);
            }
        });
        pnlBackground.add(btnAddMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 395, 44));

        btnViewMember.setBackground(new java.awt.Color(241, 246, 249));
        btnViewMember.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnViewMember.setText("View Member Information");
        btnViewMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewMemberActionPerformed(evt);
            }
        });
        pnlBackground.add(btnViewMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 200, 395, 44));

        btnUpdateMember.setBackground(new java.awt.Color(241, 246, 249));
        btnUpdateMember.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnUpdateMember.setText("Update Member Information");
        btnUpdateMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMemberActionPerformed(evt);
            }
        });
        pnlBackground.add(btnUpdateMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 395, 44));

        btnDeleteMember.setBackground(new java.awt.Color(241, 246, 249));
        btnDeleteMember.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnDeleteMember.setText("Delete Member");
        btnDeleteMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteMemberActionPerformed(evt);
            }
        });
        pnlBackground.add(btnDeleteMember, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 360, 395, 44));

        btnAssignPT.setBackground(new java.awt.Color(241, 246, 249));
        btnAssignPT.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnAssignPT.setText("Assign Member to a Personal Trainer");
        btnAssignPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignPTActionPerformed(evt);
            }
        });
        pnlBackground.add(btnAssignPT, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 440, 395, 44));

        btnRemovePT.setBackground(new java.awt.Color(241, 246, 249));
        btnRemovePT.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        btnRemovePT.setText("Remove Member From a Personal Trainer");
        btnRemovePT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePTActionPerformed(evt);
            }
        });
        pnlBackground.add(btnRemovePT, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 520, 395, 44));

        lblBPLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/BPLogosmall.png"))); // NOI18N
        pnlBackground.add(lblBPLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        lblTitle1.setFont(new java.awt.Font("Eras Bold ITC", 1, 24)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle1.setText("GYM ADMINISTRATION ");
        pnlBackground.add(lblTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        lblTitle2.setFont(new java.awt.Font("Eras Bold ITC", 1, 24)); // NOI18N
        lblTitle2.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle2.setText("SYSTEM");
        pnlBackground.add(lblTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        lblDumbbellImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/dumbbellsmall.png"))); // NOI18N
        pnlBackground.add(lblDumbbellImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, 40));

        btnBack1.setBackground(new java.awt.Color(204, 204, 204));
        btnBack1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        pnlBackground.add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 30, 60, -1));

        btnExit.setBackground(new java.awt.Color(204, 204, 204));
        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        pnlBackground.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 70, 60, -1));

        getContentPane().add(pnlBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1340, 640));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Name:btnUpdateMemberActionPerformed 
     * Purpose: This method handles the user
     * action of clicking the "Update Member Information" button in the
     * "MembersOptions" window opens a new window for updating the member's
     * information
     * @param evt represent the event object representing the user action of
     * clicking the "Update Member" button.
     */
    private void btnUpdateMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMemberActionPerformed
        JComboBox cb = new JComboBox();
        ArrayList<Member> memberList = GymSystem.getMembersList();
        for (Member member : memberList) {
            cb.addItem(member.getMembershipID());
        }
        int choice = JOptionPane.showConfirmDialog(this, cb, "Select Member ID", JOptionPane.OK_CANCEL_OPTION);

        if (choice == JOptionPane.CANCEL_OPTION) {// if clicked cancel
            this.setVisible(true);
        } else if (choice == JOptionPane.OK_OPTION) {
            Integer memberID = (Integer) cb.getSelectedItem();
            Member tempMember = GymSystem.searchForMember(memberID);

            if (tempMember instanceof Staff) {
                UpdateMemberInformationStaff updateMemberStaff = new UpdateMemberInformationStaff(this, (Staff) tempMember);
                this.setVisible(false);
                updateMemberStaff.setVisible(true);
            } else if (tempMember instanceof Student) {
                UpdateMemberInformationStudent updateMemberStudent = new UpdateMemberInformationStudent(this, (Student) tempMember);
                this.setVisible(false);
                updateMemberStudent.setVisible(true);
            }

        }
    }//GEN-LAST:event_btnUpdateMemberActionPerformed

     /**
     * Name:btnAssignPTActionPerformed 
     * Purpose:the method handles the user
     * action of clicking the "Assign member to a personal trainer" button in
     * the "MembersOptions" window It assign a member to a personal trainer and
     * checks if the member is already assigned to a personal trainer
     *
     * @param evt is the event object representing the user action of clicking
     * the "Assign PT" button
     */
    private void btnAssignPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignPTActionPerformed
        JComboBox cb = new JComboBox();
        ArrayList<Member> memberList = GymSystem.getMembersList();
        for (Member member : memberList) {
            cb.addItem(member.getMembershipID());
        }
        int choice = JOptionPane.showConfirmDialog(this, cb, "Select Member ID", JOptionPane.OK_CANCEL_OPTION);

        if (choice == JOptionPane.CANCEL_OPTION) {// if clicked cancel
            this.setVisible(true);
        } else if (choice == JOptionPane.OK_OPTION) {
            Integer memberID = (Integer) cb.getSelectedItem();
            Member tempMember = GymSystem.searchForMember(memberID);

            if (tempMember.isHasPt() == true) {
                String[] options = {"Yes", "Cancel"};
                int choice2 = JOptionPane.showOptionDialog(this, "The member is currently assigned to a personal Trainer, Do you want to transfer to another one?", "Confirmation Message", 0, JOptionPane.WARNING_MESSAGE, null, options, null);
                if (choice2 == 0) {
                    AssignMemberToPT assignPt = new AssignMemberToPT(tempMember, this);
                    assignPt.setVisible(true);
                    this.setVisible(false);
                } else {
                    this.setVisible(true);
                }
            } else {
                AssignMemberToPT assignPt = new AssignMemberToPT(tempMember, this);
                assignPt.setVisible(true);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_btnAssignPTActionPerformed

     /**
     * Name:btnRemovePTActionPerformed 
     * Purpose: This method handles the user
     * action of clicking the "Remove member from a personal trainer" button in 
     * the "MembersOptions" window If the user confirm the removal. 
     * The method removes the member from the personal trainer's list using the
     * removePtFromMember method of the GymSystem class
     *
     * @param evt is the event object representing the user action of clicking the "Remove PT" button.
     */
    private void btnRemovePTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePTActionPerformed
        JComboBox cb = new JComboBox();
        ArrayList<Member> memberList = GymSystem.getMembersList();
        for (Member member : memberList) {
            cb.addItem(member.getMembershipID());
        }
        int choice = JOptionPane.showConfirmDialog(this, cb, "Select Member ID", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.CANCEL_OPTION) {// if clicked cancel
            this.setVisible(true);
        } else if (choice == JOptionPane.OK_OPTION) {
            Integer memberID = (Integer) cb.getSelectedItem();
            Member tempMember = GymSystem.searchForMember(memberID);

            String[] options = {"Yes", "Cancel"};
            int choice2 = JOptionPane.showOptionDialog(this, "Are You Sure You Want to Delete the Member from Persoanl's Trainer List?", "Confirmation Message!", 0, JOptionPane.WARNING_MESSAGE, null, options, null);
            if (choice2 == 0) {
                boolean removed = GymSystem.removePtFromMember(memberID);
                if (removed == false) {
                    JOptionPane.showMessageDialog(this, "The Member is not assigned to a personal trainer", "Not Assigend to PT ", 2);
                } else {
                    JOptionPane.showMessageDialog(this, "The Member is successfully removed from Personal Trainer's List", "Member Removed", 1);
                }
            } else if (choice == 1) {//remove (cancel button)
                this.setVisible(true);
            }
        }

    }//GEN-LAST:event_btnRemovePTActionPerformed

    /**
     * Name:btnAddMemberActionPerformed
     * Purpose: It handles the user action of clicking the "Add New Member" button in the "MembersOptions" window.
     * When the button is clicked the method hides the "MembersOptions" window and opens a new "MemberType" window 
     * that allows the user to select the type of member to add staff or student
     * @param evt the event object representing the user action of clicking the "Add Member" button.
     */
    private void btnAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMemberActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        MemberType mType = new MemberType(this);
        mType.setVisible(true);

    }//GEN-LAST:event_btnAddMemberActionPerformed

     /**
     * Name:btnViewMemberActionPerformed
     * Purpose:The method searches for the corresponding member object 
     * and opens "StaffMemberInformation" or "StudentMemberInformation" window depending on the type of member
     * Then a window will display the member information
     * @param evt the event object representing the user action of clicking the "View Member Information" button
     */
    
    private void btnViewMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewMemberActionPerformed
        JComboBox cb = new JComboBox();
        ArrayList<Member> memberList = GymSystem.getMembersList();
        for (Member member : memberList) {
            cb.addItem(member.getMembershipID());
        }
        int choice = JOptionPane.showConfirmDialog(this, cb, "Select Member ID", JOptionPane.OK_CANCEL_OPTION);
        if (choice == JOptionPane.CANCEL_OPTION) {// if clicked cancel
            this.setVisible(true);
        } else if (choice == JOptionPane.OK_OPTION) {
            Integer memberID = (Integer) cb.getSelectedItem();
            Member tempMember = GymSystem.searchForMember(memberID);

            if (tempMember instanceof Staff) {
                Staff staffMember = (Staff) tempMember;
                StaffMemberInformation staffInfo = new StaffMemberInformation(this, staffMember);
                this.setVisible(false);
                staffInfo.setVisible(true);

            } else if (tempMember instanceof Student) {
                Student studentMember = (Student) tempMember;
                StudentMemberInformation studentInfo = new StudentMemberInformation(this, studentMember);
                this.setVisible(false);
                studentInfo.setVisible(true);
            }
        }

    }//GEN-LAST:event_btnViewMemberActionPerformed

     /**
     * Name:btnDeleteMemberActionPerformed
     * Purpose: This method handles the user action of clicking the "Delete Member" button in the "MembersOptions" window
     * If the user confirms the deletion the method uses the deleteMember method of the GymSystem class to
     * remove the member from the system. And If the user cancels the deletion the "MembersOptions" window is shown again.
     * @param evt The event object representing the user action of clicking the "Delete Member" button
     */
    private void btnDeleteMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteMemberActionPerformed
        JComboBox cb = new JComboBox();
        ArrayList<Member> memberList = GymSystem.getMembersList();
        for (Member member : memberList) {
            cb.addItem(member.getMembershipID());
        }
        int choice = JOptionPane.showConfirmDialog(this, cb, "Select Member ID", JOptionPane.OK_CANCEL_OPTION);
        if (choice == 1) {// if clicked cancel
            this.setVisible(true);
        } else if (choice == JOptionPane.OK_OPTION) {
            int MemberID = (int) cb.getSelectedItem();
            Member tempMember = GymSystem.searchForMember(MemberID);
            String[] options = {"Yes", "Cancel"};
            int choice2 = JOptionPane.showOptionDialog(this, "Are you sure you Want to Delete the Member?", "Confirmation Message!", 0, JOptionPane.WARNING_MESSAGE, null, options, null);
            if (choice2 == 0) {
                GymSystem.deleteMember(MemberID);
                JOptionPane.showMessageDialog(this, "The Member information has been deleted", "Member information deleted", 1);
            } else if (choice == 1) {//remove (cancel button)
                this.setVisible(true);
            }
        }

    }//GEN-LAST:event_btnDeleteMemberActionPerformed

     /**
     * Name: btnBack1ActionPerformed
     * Purpose:the method handles the user action of clicking the "Back" button in the "MembersOptions" window
     * When the back button is clicked the method hides the "MembersOptions" window and shows the main menu window
     * @param evt is the event object representing the user action of clicking the "Back" button
     */
    
    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed

        mainMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnBack1ActionPerformed
     /**
     * Name:btnExitActionPerformed
     * Purpose:This method handles the user action of clicking the "Exit" button in "MembersOptions" window.
     * When the button is clicked the method terminates the application by calling the System.exit() method
     * @param evt is the event object representing the user action of clicking the "Exit" button
     */
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MembersOptions.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MembersOptions.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MembersOptions.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MembersOptions.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MembersOptions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMember;
    private javax.swing.JButton btnAssignPT;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnDeleteMember;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnRemovePT;
    private javax.swing.JButton btnUpdateMember;
    private javax.swing.JButton btnViewMember;
    private javax.swing.JLabel lblBPLogo;
    private javax.swing.JLabel lblDumbbellImg;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle2;
    private javax.swing.JPanel pnlBackground;
    // End of variables declaration//GEN-END:variables
}
